{"version":3,"file":"static/js/48.a49bc1f1.chunk.js","mappings":"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","sources":["components/ScreensPage/ScreensPage.styled.js","components/ScreensPage/Filter/Filter.styled.js","components/Modals/FiltersModal/FiltersModal.styled.js","components/Modals/FiltersModal/FiltersModal.jsx","components/ScreensPage/Filter/Filter.jsx","components/ScreensPage/HeaderDashboard/HeaderDashboard.styled.js","components/ScreensPage/HeaderDashboard/HeaderDashboard.jsx","components/Boards/AddButton/AddButton.styled.js","components/Boards/AddButton/AddButton.jsx","components/Cards/Card.styled.js","components/Cards/PopItem.jsx","components/Modals/CardModal/CardModal.styled.js","components/Modals/CardModal/EditCardModal/EditCardModal.jsx","components/Cards/Card.jsx","components/Modals/ColumnModal/ColumnModal.styled.js","components/Modals/ColumnModal/EditColumnModal/EditColumnModal.jsx","components/Boards/ColumnTask/ColumnTask.Styled.js","components/Modals/CardModal/AddCardModal/AddCardModal.jsx","components/Boards/ColumnTask/ColumnTask.jsx","components/ScreensPage/MainDashboard/MainDashboard.styled.js","components/Modals/ColumnModal/AddColumnModal/AddColumnModal.jsx","components/ScreensPage/MainDashboard/MainDashboard.jsx","components/ScreensPage/ScreensPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: start;\n\n  height: calc(100vh - 60px);\n\n  background-image: url(${props => props.bgcUrl});\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n\n  padding: 14px 20px 0 20px;\n\n  margin-left: ${props => (props.isOpen ? '225px' : '0')};\n  opacity: ${props => (props.isOpen ? '0.6' : '1')};\n  transition: all 250ms linear;\n\n  @media screen and (min-width: 768px) {\n    height: calc(100vh - 68px);\n    padding: 26px 32px 0 32px;\n\n    margin-left: ${props => (props.isOpen ? '260px' : '0')};\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 10px 24px 0 24px;\n    margin-left: 260px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.button`\n  position: relative;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  cursor: pointer;\n  background: transparent;\n  border: none;\n  outline: none;\n`;\n\nexport const Text = styled.span`\n  font-family: Poppins;\n  color: ${props => props.theme.themePopup.textMain};\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const Icon = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: ${props => props.theme.themePopup.icon};\n  transition: all 250ms linear;\n  fill: transparent;\n\n  ${props => props.isOpen && 'transform: rotate(-180deg)'};\n`;\n","import styled from 'styled-components';\n\nimport { Form, Field } from 'formik';\n\nexport const Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n`;\n\nexport const SectionTitle = styled.h2`\n  color: ${props => props.theme.modal.textMain};\n  font-size: 18px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin-bottom: 14px;\n`;\n\nexport const FormWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n\n  margin-bottom: 24px;\n\n  &:first-of-type {\n    padding-top: 14px;\n    padding-bottom: 14px;\n    border-top: 1px solid ${props => props.theme.modal.line};\n    border-bottom: 1px solid ${props => props.theme.modal.line};\n  }\n\n  &:last-of-type {\n    position: relative;\n    margin-bottom: 0;\n  }\n`;\n\nexport const FormTitle = styled.h3`\n  color: ${props => props.theme.modal.textMain};\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  margin-bottom: 14px;\n`;\n\nexport const BgWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 252px;\n  gap: 4px;\n`;\n\nexport const BgItem = styled.div`\n  border-radius: 8px;\n  border: none;\n  outline: none;\n  width: 28px;\n  height: 28px;\n  background-color: ${props => props.theme.modal.iconDefault};\n  background-position: center;\n  background-size: contain;\n\n  cursor: pointer;\n  transition: all 250ms linear;\n\n  &.active {\n    scale: 1.1;\n  }\n`;\n\nexport const CustomRadioBtn = styled.div`\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n\n  background-image: url(${props => props.url});\n  background-position: center;\n  background-size: cover;\n\n  cursor: pointer;\n  background-color: ${props => props.theme.modal.backgroundSecondary};\n  transition: all 250ms linear;\n\n  &.active {\n    scale: 1.1;\n  }\n`;\n\nexport const DefaultRadioBtn = styled(Field)`\n  appearance: none;\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const ShowAllLabel = styled.p`\n  color: ${props => props.theme.modal.textSecondary};\n  font-size: 12px;\n  font-family: Poppins;\n  letter-spacing: -0.24px;\n  text-decoration-line: underline;\n  cursor: pointer;\n\n  position: absolute;\n  top: 2px;\n  right: 0;\n`;\n\nexport const RadioBtnWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: stretch;\n  gap: 12px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  position: relative;\n  width: 16px;\n  height: 14px;\n  border-radius: 14px;\n\n  cursor: pointer;\n\n  &.active {\n    border: ${props =>\n      props.value === 'without' && '2px solid rgb(128, 128, 128)'};\n    border: ${props =>\n      props.value === 'low' && '2px solid rgba(143, 161, 208, 1)'};\n    border: ${props =>\n      props.value === 'medium' && '2px solid rgba(224, 156, 181, 1)'};\n    border: ${props =>\n      props.value === 'high' && '2px solid rgba(190, 219, 176, 1)'};\n  }\n`;\n\nexport const LabelItem = styled.div`\n  width: 14px;\n  height: 14px;\n  border-radius: 14px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  background-color: ${props =>\n    props.value === 'without' && 'rgb(128, 128, 128)'};\n  background-color: ${props =>\n    props.value === 'low' && 'rgba(143, 161, 208, 1)'};\n  background-color: ${props =>\n    props.value === 'medium' && 'rgba(224, 156, 181, 1)'};\n  background-color: ${props =>\n    props.value === 'high' && 'rgba(190, 219, 176, 1)'};\n\n  transition: all 250ms linear;\n\n  &.active {\n    width: 6px;\n    height: 6px;\n  }\n`;\n\nexport const LabelText = styled.p`\n  display: block;\n  width: 100%;\n  color: ${props => props.theme.modal.textSecondary};\n  font-size: 12px;\n  font-family: Poppins;\n  letter-spacing: -0.24px;\n\n  &.active {\n    color: ${props => props.theme.modal.textMain};\n  }\n\n  cursor: pointer;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const ModalForm = styled(Form)`\n  margin: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n","import React, { useState } from 'react';\nimport {\n  SectionTitle,\n  FormWrapper,\n  Section,\n  DefaultRadioBtn,\n  FormTitle,\n  RadioBtnWrapper,\n  Label,\n  LabelItem,\n  BgItem,\n  CustomRadioBtn,\n  BgWrapper,\n  ShowAllLabel,\n  LabelText,\n  Wrapper,\n  ModalForm,\n} from './FiltersModal.styled';\n\nimport data from '../background.json';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { selectPriority } from 'redux/dashboards/dashboardsSlice';\nimport { editDashboard } from 'redux/dashboards/dashboardsOperations';\nimport { useSelector } from 'react-redux';\nimport { selectCurrentDashboard } from 'redux/dashboards/dashboardsSelectors';\n\nconst options = ['without', 'low', 'medium', 'high'];\n\nconst FiltersModal = () => {\n  const dispatch = useDispatch();\n\n  const currentDashboard = useSelector(selectCurrentDashboard);\n\n  const [selectedBg, setSelectedBg] = useState('');\n  const [selectedLabel, setSelectedLabel] = useState('');\n\n  const initialValues = {\n    bg: selectedBg,\n    label: selectedLabel,\n  };\n\n  const handleLabelSelection = el => {\n    setSelectedLabel(el);\n  };\n\n  const changeBgUrl = el => {\n    const updatedData = { backgroundURL: el };\n    dispatch(\n      editDashboard({\n        dashboardId: currentDashboard._id,\n        updatedData,\n      })\n    );\n  };\n\n  const handleBgSelection = el => {\n    setSelectedBg(el);\n  };\n\n  return (\n    <Section>\n      <SectionTitle>Filters</SectionTitle>\n\n      <Formik initialValues={initialValues}>\n        <ModalForm>\n          <FormWrapper>\n            <FormTitle>Backgrounds</FormTitle>\n\n            <BgWrapper>\n              {data.map((el, idx) => (\n                <div key={idx}>\n                  <BgItem\n                    onClick={() => handleBgSelection(el.url)}\n                    onMouseDown={() => changeBgUrl(el.url)}\n                    className={selectedBg === el.url ? 'active' : ''}\n                  >\n                    {el.url !== '' && (\n                      <CustomRadioBtn\n                        url={el.url}\n                        onClick={() => handleBgSelection(el.url)}\n                        className={selectedBg === el.url ? 'active' : ''}\n                      />\n                    )}\n                  </BgItem>\n\n                  <DefaultRadioBtn type=\"radio\" value={el.url} name=\"bg\" />\n                </div>\n              ))}\n            </BgWrapper>\n          </FormWrapper>\n\n          <FormWrapper>\n            <FormTitle>Label color</FormTitle>\n\n            <ShowAllLabel onClick={() => dispatch(selectPriority('show all'))}>\n              Show all\n            </ShowAllLabel>\n\n            <RadioBtnWrapper>\n              {options.map((el, idx) => (\n                <Wrapper\n                  key={idx}\n                  onClick={() => {\n                    handleLabelSelection(el);\n                    dispatch(selectPriority(el));\n                  }}\n                >\n                  <Label\n                    value={el}\n                    className={selectedLabel === el ? 'active' : ''}\n                  >\n                    <LabelItem\n                      value={el}\n                      className={selectedLabel === el ? 'active' : ''}\n                    />\n                    <DefaultRadioBtn type=\"radio\" value={el} name=\"label\" />\n                  </Label>\n\n                  <LabelText className={selectedLabel === el ? 'active' : ''}>\n                    {el === 'without'\n                      ? `${el[0].toUpperCase() + el.slice(1)} priority`\n                      : el[0].toUpperCase() + el.slice(1)}\n                  </LabelText>\n                </Wrapper>\n              ))}\n            </RadioBtnWrapper>\n          </FormWrapper>\n        </ModalForm>\n      </Formik>\n    </Section>\n  );\n};\n\nexport default FiltersModal;\n","import { Icon, Text, Wrapper } from './Filter.styled';\nimport sprite from '../../../images/sprite.svg';\nimport BasicModal from 'components/Modals/BasicModal/BasicModal';\nimport { useState } from 'react';\nimport FiltersModal from 'components/Modals/FiltersModal/FiltersModal';\n\nconst Filter = () => {\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <>\n      <Wrapper onClick={handleOpen}>\n        <Icon>\n          <use href={sprite + '#icon-filter'} />\n        </Icon>\n\n        <Text>Filters</Text>\n      </Wrapper>\n      <BasicModal\n        name=\"Filters\"\n        open={open}\n        closeModal={handleClose}\n        children={<FiltersModal closeModal={handleClose} />}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Header = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n\n  margin-bottom: 10px;\n`;\n\nexport const Title = styled.h2`\n  color: ${props => props.theme.header.userName};\n  font-size: 20px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n`;\n","import Filter from '../Filter/Filter';\nimport { Header, Title } from './HeaderDashboard.styled';\n\nconst HeaderDashboard = ({ children }) => {\n  return (\n    <Header>\n      <Title>{children}</Title>\n\n      <Filter />\n    </Header>\n  );\n};\n\nexport default HeaderDashboard;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 0;\n\n  right: ${props => (props.length === 0 ? '-334px' : '-368px')};\n  width: 334px;\n  height: 56px;\n  padding: 14px 79px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n\n  border-radius: 8px;\n  background: ${props => props.theme.addColumnButton.background};\n  outline: none;\n  border: none;\n\n  transition: all 250ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  background-color: ${props => props.theme.addColumnButton.plusBackground};\n\n  transition: all 250ms linear;\n\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: ${props => props.theme.addColumnButton.plusColor};\n`;\n\nexport const Text = styled.p`\n  color: ${props => props.theme.addColumnButton.color};\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  width: 150px;\n`;\n","import { Button, Icon, IconWrapper, Text } from './AddButton.styled';\nimport sprite from '../../../images/sprite.svg';\nimport { useSelector } from 'react-redux';\nimport { selectColumnsLength } from 'redux/dashboards/dashboardsSelectors';\n\nconst AddButton = ({ openModal }) => {\n  const columnsLength = useSelector(selectColumnsLength);\n\n  return (\n    <Button length={columnsLength} onClick={openModal} type=\"button\">\n      <IconWrapper>\n        <Icon>\n          <use href={sprite + '#icon-plus'} />\n        </Icon>\n      </IconWrapper>\n\n      <Text>Add another column</Text>\n    </Button>\n  );\n};\n\nexport default AddButton;\n","import styled from 'styled-components';\nimport { AiOutlineClockCircle } from 'react-icons/ai';\n\nexport const CardWrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  padding: 14px 20px 14px 24px;\n\n  width: 100%;\n  min-height: 154px;\n  border-radius: 8px;\n  background-color: ${props => props.theme.column.backgroundMain};\n  overflow: hidden;\n\n  opacity: ${props => (props.expired ? 0.4 : 1)};\n\n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 4px;\n    height: 100%;\n\n    background-color: ${props =>\n      props.priority === 'without' && 'rgb(128, 128, 128)'};\n    background-color: ${props =>\n      props.priority === 'low' && 'rgba(143, 161, 208, 1)'};\n    background-color: ${props =>\n      props.priority === 'medium' && 'rgba(224, 156, 181, 1)'};\n    background-color: ${props =>\n      props.priority === 'high' && 'rgba(190, 219, 176, 1)'};\n  }\n`;\n\nexport const TopWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Title = styled.h4`\n  color: ${props => props.theme.column.textMain};\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-weight: 600;\n  letter-spacing: -0.28px;\n  font-size: 14px;\n`;\n\nexport const Text = styled.p`\n  position: relative;\n  display: flex;\n  color: ${props => props.theme.column.textSecondary};\n\n  font-size: 12px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 400;\n  line-height: 16px;\n  letter-spacing: -0.24px;\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -18px;\n    width: 100%;\n    height: 1px;\n    background-color: ${props => props.theme.column.borderColor};\n  }\n`;\n\nexport const BottomWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n`;\n\nexport const Stats = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  gap: 14px;\n`;\n\nexport const Priority = styled.p`\n  position: relative;\n\n  display: flex;\n  align-items: flex-end;\n  padding-left: 16px;\n  gap: 4px;\n\n  color: ${props => props.theme.column.textMain};\n  font-size: 10px;\n  font-family: 'Poppins';\n  font-weight: 400;\n  letter-spacing: -0.2px;\n\n  &::before {\n    content: 'Priority';\n    position: absolute;\n    left: 0;\n    top: 0px;\n    color: ${props => props.theme.column.textSecondary};\n    font-size: 8px;\n    font-family: 'Poppins';\n    font-weight: 400;\n    letter-spacing: -0.16px;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    bottom: 2px;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n\n    background-color: ${props =>\n      props.priority === 'without' && 'rgb(128, 128, 128)'};\n    background-color: ${props =>\n      props.priority === 'low' && 'rgba(143, 161, 208, 1)'};\n    background-color: ${props =>\n      props.priority === 'medium' && 'rgba(224, 156, 181, 1)'};\n    background-color: ${props =>\n      props.priority === 'high' && 'rgba(190, 219, 176, 1)'};\n  }\n`;\n\nexport const Deadline = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n\n  gap: 4px;\n\n  color: ${props => props.theme.column.textMain};\n  font-size: 10px;\n  font-family: 'Poppins';\n  font-weight: 400;\n  letter-spacing: -0.2px;\n\n  &::before {\n    content: 'Deadline';\n    color: ${props => props.theme.column.textSecondary};\n    font-size: 8px;\n    font-family: 'Poppins';\n    font-weight: 400;\n    letter-spacing: -0.16px;\n  }\n`;\n\n// icons\n\nexport const DelayIcon = styled(AiOutlineClockCircle)`\n  color: ${props => props.theme.column.textSecondary};\n  cursor: pointer;\n`;\n\nexport const IconsGroup = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: end;\n  gap: 8px;\n`;\n\nexport const ActiveIcon = styled.svg`\n  height: 16px;\n  width: 16px;\n  fill: transparent;\n  stroke: ${props => props.theme.column.icon};\n\n  transition: all 150ms linear;\n  cursor: pointer;\n\n  &:hover {\n    stroke: ${props => props.theme.column.textSecondary};\n  }\n`;\n\nexport const IconBellWrapper = styled.div`\n  height: 16px;\n  width: 16px;\n  background-color: ${props => props.theme.themePopup.backgroundBell};\n  filter: ${props => props.theme.themePopup.filterBell};\n`;\n\nexport const IconBell = styled.svg`\n  position: absolute;\n  height: 16px;\n  width: 16px;\n  stroke: ${props => props.theme.themePopup.strokeBell};\n  fill: transparent;\n  filter: none;\n  transition: all 150ms linear;\n`;\n\nexport const MoverWrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: end;\n  align-items: center;\n`;\n\n// popup items\nexport const PopupWrapper = styled.ul`\n  position: absolute;\n  bottom: 130%;\n  left: 50%;\n  transform: translateX(-60%);\n  min-width: 160px;\n  padding: 18px;\n  flex-direction: column;\n  justify-content: center;\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.themePopup.border};\n  background: ${props => props.theme.themePopup.background};\n  box-shadow: 0px 4px 16px 0px ${props => props.theme.themePopup.boxShadow};\n  gap: 4px;\n  z-index: 99;\n\n  overflow-y: scroll;\n  scroll-behavior: auto;\n  max-height: 112px;\n\n  ::-webkit-scrollbar {\n    width: 0;\n  }\n`;\n\nexport const PopupItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 8px;\n  width: 100%;\n  color: ${props => props.theme.themePopup.textSecondary};\n  stroke: ${props => props.theme.themePopup.textSecondary};\n  fill: transparent;\n  transition: all 250ms linear;\n\n  &:hover {\n    color: ${props => props.theme.themePopup.textAccent};\n    stroke: ${props => props.theme.themePopup.textAccent};\n  }\n\n  cursor: pointer;\n`;\n\nexport const PopupText = styled.p`\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-weight: 400;\n  letter-spacing: -0.28px;\n`;\n\nexport const PopupIcon = styled.svg`\n  height: 16px;\n  width: 16px;\n`;\n","import { PopupWrapper, PopupItem, PopupText, PopupIcon } from './Card.styled';\nimport sprite from '../../images/sprite.svg';\nimport { useSelector } from 'react-redux';\nimport { selectColumns } from 'redux/dashboards/dashboardsSelectors';\nimport { useDispatch } from 'react-redux';\nimport { changeColumn } from 'redux/dashboards/dashboardsOperations';\n\nconst CardMovePopup = ({ card, columnName }) => {\n  const dispatch = useDispatch();\n  const columns = useSelector(selectColumns);\n\n  const filteredColumnNames = columns.filter(item => item.title !== columnName);\n\n  const checkTextLength = text => {\n    const str = text && text.split('');\n\n    if (str.length <= 12) {\n      return str.join('');\n    }\n    return str.splice(0, 8).join('') + '...';\n  };\n\n  const handleChangeColumn = (cardId, columnId, currentOwner) => {\n    dispatch(changeColumn({ cardId, columnId, currentOwner }));\n  };\n\n  return (\n    <PopupWrapper>\n      {filteredColumnNames.map(item => (\n        <PopupItem\n          onClick={() => handleChangeColumn(card._id, item._id, card.owner)}\n          key={item._id}\n        >\n          <PopupText>{checkTextLength(item.title)}</PopupText>\n\n          <PopupIcon>\n            <use href={sprite + '#icon-arrow-circle-broken-right'} />\n          </PopupIcon>\n        </PopupItem>\n      ))}\n    </PopupWrapper>\n  );\n};\n\nexport default CardMovePopup;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n`;\n\nexport const SectionTitle = styled.h2`\n  color: ${props => props.theme.modal.textMain};\n  font-size: 18px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin-bottom: 24px;\n`;\n\nexport const FormWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n\n  margin-bottom: 24px;\n\n  &:last-of-type {\n    margin-bottom: 14px;\n  }\n`;\n\nexport const LabelInput = styled.label`\n  width: 100%;\n`;\n\nexport const TitleInput = styled(Field)`\n  width: 100%;\n  height: 49px;\n  padding: 14px 18px;\n\n  font-size: 14px;\n  font-family: 'Poppins';\n  letter-spacing: -0.28px;\n\n  background-color: ${props => props.theme.modal.backgroundMain};\n  border: 1px solid ${props => props.theme.modal.buttonBackground};\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  outline: none;\n  border-radius: 8px;\n\n  color: ${props => props.theme.modal.textMain};\n  transition: all 250ms ease;\n  opacity: 0.4;\n\n  &::placeholder {\n    color: ${props => props.theme.modal.textMain};\n    font-size: 14px;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px;\n  }\n\n  &:focus {\n    opacity: 1;\n  }\n`;\n\nexport const Textarea = styled(Field)`\n  resize: none;\n  width: 100%;\n  height: 154px;\n  padding: 14px 18px;\n\n  font-size: 14px;\n  font-family: 'Poppins';\n  letter-spacing: -0.28px;\n\n  margin-top: 14px;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n\n  background-color: ${props => props.theme.modal.backgroundMain};\n  border: 1px solid ${props => props.theme.modal.buttonBackground};\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  outline: none;\n  border-radius: 8px;\n\n  color: ${props => props.theme.modal.textMain};\n  transition: all 250ms ease;\n  opacity: 0.4;\n\n  &::placeholder {\n    color: ${props => props.theme.modal.textMain};\n    font-size: 14px;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px;\n  }\n\n  &:focus {\n    opacity: 1;\n  }\n`;\n\nexport const AuthFormSubmitButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n  padding: 14px;\n  border: none;\n  background: ${props => props.theme.modal.buttonBackground};\n  border-radius: 8px;\n\n  font-family: 'Poppins';\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  color: ${props => props.theme.modal.buttonText};\n\n  transition: all 150ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport const DefaultRadioBtn = styled(Field)`\n  appearance: none;\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const FormTitle = styled.h3`\n  color: ${props => props.theme.modal.textSecondary};\n  font-size: 12px;\n  font-family: 'Poppins';\n  font-weight: 400;\n  letter-spacing: -0.24px;\n  margin-bottom: 4px;\n`;\n\nexport const RadioBtnWrapper = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  width: 14px;\n  height: 14px;\n  border-radius: 14px;\n\n  cursor: pointer;\n\n  &.active {\n    border: ${props =>\n      props.value === 'without' && '2px solid rgb(128,128,128)'};\n    border: ${props =>\n      props.value === 'low' && '2px solid rgba(143, 161, 208, 1)'};\n    border: ${props =>\n      props.value === 'medium' && '2px solid rgba(224, 156, 181, 1)'};\n    border: ${props =>\n      props.value === 'high' && '2px solid rgba(190, 219, 176, 1)'};\n  }\n`;\n\n// need fix grey color\nexport const LabelItem = styled.div`\n  width: 14px;\n  height: 14px;\n  border-radius: 14px;\n  z-index: 99;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  background-color: ${props => props.value === 'without' && 'rgb(128,128,128)'};\n  background-color: ${props =>\n    props.value === 'low' && 'rgba(143, 161, 208, 1)'};\n  background-color: ${props =>\n    props.value === 'medium' && 'rgba(224, 156, 181, 1)'};\n  background-color: ${props =>\n    props.value === 'high' && 'rgba(190, 219, 176, 1)'};\n\n  transition: all 250ms linear;\n\n  &.active {\n    width: 6px;\n    height: 6px;\n  }\n`;\n\nexport const ButtonPlus = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n\n  width: 28px;\n  height: 28px;\n  background-color: ${props => props.theme.modal.plusBackground};\n  margin-right: 8px;\n  padding: 7px;\n`;\n\nexport const PlusIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: ${props => props.theme.modal.plusColor};\n`;\n\nexport const ErrorSection = styled(ErrorMessage)`\n  padding-left: 14px;\n  color: #c04d4d;\n  font-size: 18px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n`;\n\nexport const ModalForm = styled(Form)`\n  margin: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n  width: 233px;\n\n  .react-datepicker {\n    overflow: hidden;\n\n    margin-top: -28px;\n    border-radius: 8px;\n    border: 1px solid ${props => props.theme.modal.buttonBackground};\n\n    background: ${props => props.theme.modal.backgroundMain};\n    outline: none;\n    width: 233px;\n    position: absolute;\n    right: -307px;\n    top: -190px;\n\n    &__input-container {\n      appearance: none;\n      position: absolute;\n      width: 1px;\n      height: 1px;\n      margin: -1px;\n      border: 0;\n      padding: 0;\n\n      white-space: nowrap;\n      clip-path: inset(100%);\n      clip: rect(0 0 0 0);\n      overflow: hidden;\n    }\n\n    &__navigation {\n      position: absolute;\n      top: 8px;\n    }\n\n    &__navigation-icon {\n      width: 4px;\n      height: 8px;\n      color: ${props => props.theme.modal.textAccent};\n    }\n\n    &__month {\n      margin: 0;\n    }\n\n    &__week {\n      color: ${props => props.theme.modal.unActiveDay};\n      font-size: 14px;\n      font-family: Poppins;\n      line-height: 18px;\n      letter-spacing: -0.28px;\n\n      &:last-of-type {\n        margin-bottom: 18px;\n      }\n    }\n\n    &__day {\n      width: 24px;\n      height: 24px;\n      color: ${props => props.theme.modal.textMain};\n      font-size: 14px;\n      font-family: Poppins;\n      width: 1.5rem;\n\n      transition: all 250ms ease;\n\n      &--today {\n        color: ${props => props.theme.modal.today};\n        background: ${props => props.theme.modal.buttonBackground};\n        border-radius: 50%;\n      }\n\n      &--outside-month {\n        width: 24px;\n        height: 24px;\n        color: ${props => props.theme.modal.unActiveDay};\n      }\n\n      &--keyboard-selected {\n        border-radius: 24px;\n        background: ${props => props.theme.modal.buttonBackground};\n        color: ${props => props.theme.modal.today};\n      }\n\n      &:hover {\n        border-radius: 24px;\n        background: ${props => props.theme.modal.buttonBackground};\n        color: ${props => props.theme.modal.today};\n      }\n    }\n\n    &__day--disabled {\n      width: 24px;\n      height: 24px;\n      color: ${props => props.theme.modal.unActiveDay};\n    }\n\n    &__day--selected {\n      border-radius: 24px;\n      background: ${props => props.theme.modal.buttonBackground};\n      color: ${props => props.theme.modal.today};\n    }\n\n    &__triangle {\n      display: none;\n    }\n\n    &__header {\n      background-color: ${props => props.theme.modal.backgroundMain};\n      width: 231px;\n      border-bottom: none;\n      padding: 18px 18px 14px;\n    }\n\n    &__day-names {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      gap: 5px;\n      border-top: 1px solid ${props => props.theme.modal.unActiveDay};\n      padding-top: 14px;\n    }\n\n    &__day-name {\n      color: ${props => props.theme.modal.textSecondary};\n      font-size: 14px;\n      font-family: 'Poppins';\n      font-style: normal;\n      font-weight: 500;\n      line-height: normal;\n      letter-spacing: -0.28px;\n    }\n\n    &__current-month {\n      color: ${props => props.theme.modal.textMain};\n      font-size: 16px;\n      font-family: Poppins;\n      font-weight: 500;\n      letter-spacing: -0.32px;\n      margin-bottom: 14px;\n    }\n  }\n  .react-datepicker__input-container input {\n  }\n`;\n\nexport const DateTitle = styled.div`\n  color: ${props => props.theme.modal.buttonBackground};\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n\n  cursor: pointer;\n`;\n","import React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport {\n  FormWrapper,\n  Section,\n  AuthFormSubmitButton,\n  TitleInput,\n  SectionTitle,\n  Textarea,\n  Label,\n  PlusIcon,\n  DefaultRadioBtn,\n  LabelItem,\n  RadioBtnWrapper,\n  FormTitle,\n  Wrapper,\n  DateTitle,\n  ModalForm,\n  ErrorSection,\n  ButtonPlus,\n} from '../CardModal.styled';\nimport sprite from '../../../../images/sprite.svg';\n\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { editCard } from 'redux/dashboards/dashboardsOperations';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required!'),\n  description: Yup.string()\n    .max(230, 'Name must be at most 230 characters')\n    .required('Description is required'),\n});\n\nconst dateOptions = {\n  year: 'numeric',\n  month: '2-digit',\n  day: '2-digit',\n};\n\nconst options = ['low', 'medium', 'high', 'without'];\n\nconst EditCardModal = ({ card, closeModal }) => {\n  const dispatch = useDispatch();\n  const { _id, title, deadline, description, priority } = card;\n\n  const [selectedLabel, setSelectedLabel] = useState(priority);\n  const [startDate, setStartDate] = useState('');\n  const customDate =\n    startDate !== '' ? startDate.toLocaleString('en-GB', dateOptions) : null;\n\n  const dateForEdit = new Date(deadline);\n  const dateLabel = dateForEdit.toLocaleString('en-GB', dateOptions);\n\n  const initialValues = {\n    title,\n    description,\n    priority: selectedLabel,\n  };\n\n  let editedDeadline = startDate;\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { title, description, priority } = values;\n\n    if (editedDeadline === '') {\n      editedDeadline = deadline;\n    }\n\n    dispatch(\n      editCard({\n        cardId: _id,\n        title,\n        description,\n        priority,\n        deadline: editedDeadline,\n      })\n    );\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <Section>\n      <SectionTitle>Edit Card</SectionTitle>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <ModalForm>\n          <FormWrapper>\n            <ErrorSection name=\"title\" component=\"div\" />\n            <TitleInput\n              type=\"text\"\n              id=\"title\"\n              name=\"title\"\n              placeholder=\"Title\"\n            />\n\n            <ErrorSection name=\"description\" component=\"div\" />\n            <Textarea\n              component=\"textarea\"\n              name=\"description\"\n              id=\"description\"\n              type=\"text\"\n              placeholder=\"Description\"\n            />\n          </FormWrapper>\n\n          <FormWrapper>\n            <FormTitle>Icons </FormTitle>\n            <RadioBtnWrapper>\n              {options.map((el, idx) => (\n                <Label\n                  key={idx}\n                  value={el}\n                  className={selectedLabel === el ? 'active' : ''}\n                  id=\"labelOut\"\n                >\n                  <LabelItem\n                    onClick={() => setSelectedLabel(el)}\n                    value={el}\n                    className={selectedLabel === el ? 'active' : ''}\n                    id=\"labelIn\"\n                  />\n\n                  <DefaultRadioBtn type=\"radio\" value={el} name=\"priority\" />\n                </Label>\n              ))}\n            </RadioBtnWrapper>\n          </FormWrapper>\n\n          <FormWrapper>\n            <FormTitle>Deadline </FormTitle>\n            <DateTitle\n              onClick={() => document.querySelector('.input-ref').click()}\n            >\n              {startDate !== '' ? customDate : dateLabel}\n            </DateTitle>\n            <Wrapper>\n              <DatePicker\n                className=\"input-ref\"\n                minDate={new Date()}\n                timeFormat=\"dd/MM/yyyy\"\n                selected={startDate}\n                onChange={date => setStartDate(date)}\n                id=\"datePicker\"\n              />\n            </Wrapper>\n          </FormWrapper>\n\n          <AuthFormSubmitButton type=\"submit\">\n            <ButtonPlus>\n              <PlusIcon>\n                <use href={sprite + '#icon-plus'} />\n              </PlusIcon>\n            </ButtonPlus>\n            Edit\n          </AuthFormSubmitButton>\n        </ModalForm>\n      </Formik>\n    </Section>\n  );\n};\n\nexport default EditCardModal;\n","import { useState, useRef, useEffect } from 'react';\nimport sprite from '../../images/sprite.svg';\nimport CardMovePopup from './PopItem';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  DelayIcon,\n  Title,\n  CardWrapper,\n  Text,\n  IconsGroup,\n  IconBell,\n  TopWrapper,\n  BottomWrapper,\n  Stats,\n  Priority,\n  Deadline,\n  ActiveIcon,\n  MoverWrapper,\n  IconBellWrapper,\n  PopupWrapper,\n  PopupItem,\n  PopupText,\n} from './Card.styled';\nimport { deleteCard, editCard } from 'redux/dashboards/dashboardsOperations';\nimport BasicModal from 'components/Modals/BasicModal/BasicModal';\nimport EditCardModal from 'components/Modals/CardModal/EditCardModal/EditCardModal';\n\nconst Card = ({ item, columnName }) => {\n  const dispatch = useDispatch();\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [delayPopup, setDelayPopup] = useState(false);\n  const moveIconRef = useRef();\n  const [openCardModal, setOpenCardModal] = useState(false);\n  const handleOpenCardModal = () => setOpenCardModal(true);\n  const handleCloseCardModal = () => setOpenCardModal(false);\n\n  const { title, _id, deadline, description, priority } = item;\n\n  const delayOptions = [1, 3, 5, 7];\n\n  const options = {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n  };\n\n  const today = new Date().toLocaleString('en-GB', options);\n  const parsedDate = new Date(deadline);\n\n  const formatedDeadline =\n    parsedDate && parsedDate.toLocaleString('en-GB', options);\n\n  const handleIconMoveClick = () => setIsPopupOpen(!isPopupOpen);\n\n  const checkTextLength = text => {\n    const str = text.split('');\n\n    if (str.length <= 80) {\n      return str.join('');\n    }\n    return str.splice(0, 80).join('') + '...';\n  };\n\n  const handleOutsideClick = event => {\n    const path = event.composedPath();\n\n    if (!path.includes(moveIconRef.current)) {\n      setIsPopupOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    document.body.addEventListener('click', handleOutsideClick);\n\n    return () => {\n      document.body.removeEventListener('click', handleOutsideClick);\n    };\n  }, []);\n\n  const expiredCard = today > formatedDeadline;\n\n  const handleDelayPopup = () => {\n    setDelayPopup(prev => !prev);\n  };\n\n  const handleDeadline = (deadline, delay) => {\n    const date = new Date(deadline);\n    date.setDate(date.getDate() + delay);\n\n    dispatch(\n      editCard({ cardId: _id, title, description, priority, deadline: date })\n    );\n\n    setDelayPopup(prev => !prev);\n  };\n\n  return (\n    <>\n      <CardWrapper priority={priority} expired={expiredCard}>\n        <TopWrapper>\n          <Title>{title}</Title>\n\n          <Text>{checkTextLength(description)}</Text>\n        </TopWrapper>\n\n        <BottomWrapper>\n          <Stats>\n            <Priority priority={priority}>{priority}</Priority>\n\n            <Deadline>{formatedDeadline}</Deadline>\n          </Stats>\n\n          <IconsGroup>\n            {today === formatedDeadline && (\n              <>\n                <IconBell aria-label=\"bell icon\">\n                  <use href={sprite + `#icon-bell`} />\n                </IconBell>\n                <IconBellWrapper></IconBellWrapper>\n              </>\n            )}\n\n            {today > formatedDeadline && (\n              <>\n                <DelayIcon onClick={handleDelayPopup} />\n              </>\n            )}\n            <MoverWrapper>\n              <ActiveIcon\n                ref={moveIconRef}\n                aria-label=\"move card icon\"\n                onClick={handleIconMoveClick}\n              >\n                <use href={sprite + `#icon-arrow-circle-broken-right`} />\n              </ActiveIcon>\n\n              {delayPopup && (\n                <PopupWrapper>\n                  {delayOptions.map((item, idx) => (\n                    <PopupItem\n                      onClick={() => handleDeadline(deadline, item)}\n                      key={idx}\n                    >\n                      <PopupText>\n                        {item > 1 ? `${item} days delay` : `${item} day delay`}{' '}\n                      </PopupText>\n                    </PopupItem>\n                  ))}\n                </PopupWrapper>\n              )}\n\n              {isPopupOpen && (\n                <CardMovePopup card={item} columnName={columnName} />\n              )}\n            </MoverWrapper>\n            <ActiveIcon onClick={handleOpenCardModal} aria-label=\"edit icon\">\n              <use href={sprite + `#icon-pencil`} />\n            </ActiveIcon>\n            <ActiveIcon\n              aria-label=\"edit icon\"\n              onClick={() => dispatch(deleteCard(_id))}\n            >\n              <use href={sprite + `#icon-trash`} />\n            </ActiveIcon>\n          </IconsGroup>\n        </BottomWrapper>\n      </CardWrapper>\n      <BasicModal\n        open={openCardModal}\n        closeModal={handleCloseCardModal}\n        children={\n          <EditCardModal card={item} closeModal={handleCloseCardModal} />\n        }\n      />\n    </>\n  );\n};\n\nexport default Card;\n","import styled from 'styled-components';\n\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n`;\n\nexport const SectionTitle = styled.h2`\n  color: ${props => props.theme.modal.textMain};\n  font-size: 18px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin-bottom: 24px;\n`;\n\nexport const FormWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n\n  margin-bottom: 24px;\n`;\n\nexport const LabelInput = styled.label`\n  width: 100%;\n`;\n\nexport const TitleInput = styled(Field)`\n  width: 100%;\n  height: 49px;\n  padding: 14px 18px;\n\n  font-size: 14px;\n  font-family: 'Poppins';\n  letter-spacing: -0.28px;\n\n  background-color: ${props => props.theme.modal.backgroundMain};\n  border: 1px solid ${props => props.theme.modal.buttonBackground};\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  outline: none;\n  border-radius: 8px;\n\n  color: ${props => props.theme.modal.textMain};\n  transition: all 250ms ease;\n  opacity: 0.4;\n\n  &::placeholder {\n    color: ${props => props.theme.modal.textMain};\n    font-size: 14px;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px;\n  }\n\n  &:focus {\n    opacity: 1;\n  }\n`;\n\nexport const AuthFormSubmitButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n  padding: 14px;\n  border: none;\n  background: ${props => props.theme.modal.buttonBackground};\n  border-radius: 8px;\n\n  font-family: 'Poppins';\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  color: ${props => props.theme.modal.buttonText};\n\n  transition: all 150ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport const ButtonPlus = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n\n  width: 28px;\n  height: 28px;\n  background-color: ${props => props.theme.modal.plusBackground};\n  margin-right: 8px;\n  padding: 7px;\n`;\n\nexport const PlusIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: ${props => props.theme.modal.plusColor};\n`;\n\nexport const ErrorSection = styled(ErrorMessage)`\n  padding-left: 14px;\n  color: #c04d4d;\n  font-size: 18px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n`;\n\nexport const ModalForm = styled(Form)`\n  margin: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { editColumn } from 'redux/dashboards/dashboardsOperations';\nimport sprite from '../../../../images/sprite.svg';\n\nimport {\n  FormWrapper,\n  Section,\n  AuthFormSubmitButton,\n  PlusIcon,\n  TitleInput,\n  SectionTitle,\n  ModalForm,\n  ErrorSection,\n  ButtonPlus,\n} from '../ColumnModal.styled';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\n\nconst EditColumnModal = ({ title, columnId, closeModal }) => {\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    title,\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { title } = values;\n    dispatch(editColumn({ columnId, title }));\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <Section>\n      <SectionTitle>Edit column</SectionTitle>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <ModalForm>\n          <FormWrapper>\n            <ErrorSection name=\"title\" component=\"div\" />\n            <TitleInput\n              type=\"text \"\n              id=\"text\"\n              name=\"title\"\n              placeholder=\"Title \"\n            />\n          </FormWrapper>\n\n          <AuthFormSubmitButton type=\"submit\">\n            <ButtonPlus>\n              <PlusIcon>\n                <use href={sprite + '#icon-plus'} />\n              </PlusIcon>\n            </ButtonPlus>\n            Edit\n          </AuthFormSubmitButton>\n        </ModalForm>\n      </Formik>\n    </Section>\n  );\n};\n\nexport default EditColumnModal;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div``;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n\nexport const ContentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n`;\n\nexport const TaskList = styled.ul`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: 350px;\n  gap: 8px;\n  max-height: calc(154px * 2 + 8px);\n  padding-right: 8px;\n\n  overflow-y: scroll;\n\n  overflow-y: ${props => (props.length < 3 ? 'hidden' : 'scroll')};\n  width: ${props => (props.length < 3 ? '342px' : '350px')};\n\n  ::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: ${props => props.theme.column.scrollTrack};\n    border: 1px solid ${props => props.theme.column.scrollBorder};\n    border-radius: 12px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background-color: ${props => props.theme.column.scrollThumb};\n  }\n\n  @media screen and (min-height: 780px) {\n    max-height: calc(154px * 3 + 16px);\n    overflow-y: ${props => (props.length < 4 ? 'hidden' : 'scroll')};\n    width: ${props => (props.length < 4 ? '342px' : '350px')};\n  }\n\n  @media screen and (min-height: 942px) {\n    max-height: calc(154px * 4 + 24px);\n    overflow-y: ${props => (props.length < 5 ? 'hidden' : 'scroll')};\n    width: ${props => (props.length < 5 ? '342px' : '350px')};\n  }\n\n  @media screen and (min-height: 1104px) {\n    max-height: calc(154px * 5 + 32px);\n    overflow-y: ${props => (props.length < 6 ? 'hidden' : 'scroll')};\n    width: ${props => (props.length < 6 ? '342px' : '350px')};\n  }\n`;\n\n// header\nexport const Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 334px;\n  height: 56px;\n  padding: 14px 24px;\n\n  border-radius: 8px;\n  background-color: ${props => props.theme.column.backgroundMain};\n  font-weight: 500;\n`;\n\nexport const Title = styled.h2`\n  color: ${props => props.theme.column.textMain};\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const Icon = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.column.icon};\n  fill: transparent;\n  cursor: pointer;\n  transition: all 250ms linear;\n\n  &:hover {\n    opacity: 0.4;\n    transform: scale(1.4);\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 334px;\n  padding: 14px;\n  margin-bottom: 16px;\n\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n\n  border: none;\n  color: ${props => props.theme.column.buttonColor};\n  background-color: ${props => props.theme.column.buttonBackground};\n  border-radius: 8px;\n\n  transition: all 250ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nexport const ButtonPlus = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n\n  width: 28px;\n  height: 28px;\n  background-color: ${props => props.theme.column.plusBackground};\n  margin-right: 8px;\n  padding: 7px;\n\n  transition: all 250ms linear;\n\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const PlusIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: ${props => props.theme.column.plusColor};\n`;\n","import React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { addCard } from 'redux/dashboards/dashboardsOperations';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport {\n  FormWrapper,\n  Section,\n  AuthFormSubmitButton,\n  TitleInput,\n  SectionTitle,\n  Textarea,\n  Label,\n  PlusIcon,\n  DefaultRadioBtn,\n  LabelItem,\n  RadioBtnWrapper,\n  FormTitle,\n  Wrapper,\n  DateTitle,\n  ModalForm,\n  ErrorSection,\n  ButtonPlus,\n} from '../CardModal.styled';\nimport sprite from '../../../../images/sprite.svg';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required!'),\n  description: Yup.string()\n    .max(230, 'Name must be at most 230 characters')\n    .required('Description is required'),\n});\n\nconst options = ['low', 'medium', 'high', 'without'];\n\nconst dateOptions = {\n  year: 'numeric',\n  month: '2-digit',\n  day: '2-digit',\n};\n\nconst months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nconst today = new Date();\nconst month = months[today.getMonth()];\nconst day = today.getDate();\nconst formattedDate = `${month} ${day}`;\n\nconst AddCardModal = ({ columnId, closeModal }) => {\n  const dispatch = useDispatch();\n  const [selectedLabel, setSelectedLabel] = useState(options[3]);\n  const [startDate, setStartDate] = useState('');\n  const customDate =\n    startDate !== '' ? startDate.toLocaleString('en-GB', dateOptions) : null;\n\n  const initialValues = {\n    title: '',\n    description: '',\n    priority: selectedLabel,\n  };\n\n  let deadline = startDate;\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { title, description, priority } = values;\n\n    if (deadline === '') {\n      deadline = new Date().toISOString();\n    }\n\n    dispatch(addCard({ columnId, title, description, priority, deadline }));\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <Section>\n      <SectionTitle>Add Card</SectionTitle>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <ModalForm>\n          <FormWrapper>\n            <ErrorSection name=\"title\" component=\"div\" />\n            <TitleInput\n              type=\"text\"\n              id=\"title\"\n              name=\"title\"\n              placeholder=\"Title\"\n            />\n\n            <ErrorSection name=\"description\" component=\"div\" />\n            <Textarea\n              component=\"textarea\"\n              name=\"description\"\n              id=\"description\"\n              type=\"text\"\n              placeholder=\"Description\"\n            />\n          </FormWrapper>\n\n          <FormWrapper>\n            <FormTitle>Icons </FormTitle>\n            <RadioBtnWrapper>\n              {options.map((el, idx) => (\n                <Label\n                  key={idx}\n                  value={el}\n                  className={selectedLabel === el ? 'active' : ''}\n                  id=\"labelOut\"\n                >\n                  <LabelItem\n                    onClick={() => setSelectedLabel(el)}\n                    value={el}\n                    className={selectedLabel === el ? 'active' : ''}\n                    id=\"in\"\n                  />\n\n                  <DefaultRadioBtn type=\"radio\" value={el} name=\"priority\" />\n                </Label>\n              ))}\n            </RadioBtnWrapper>\n          </FormWrapper>\n\n          <FormWrapper>\n            <FormTitle>Deadline </FormTitle>\n            <DateTitle\n              onClick={() => document.querySelector('.input-ref').click()}\n            >\n              {startDate !== '' ? customDate : `Today, ${formattedDate}`}\n            </DateTitle>\n            <Wrapper>\n              <DatePicker\n                className=\"input-ref\"\n                minDate={new Date()}\n                timeFormat=\"dd/MM/yyyy\"\n                selected={startDate}\n                onChange={date => setStartDate(date)}\n                id=\"datePicker\"\n              />\n            </Wrapper>\n          </FormWrapper>\n\n          <AuthFormSubmitButton type=\"submit\">\n            <ButtonPlus>\n              <PlusIcon>\n                <use href={sprite + '#icon-plus'} />\n              </PlusIcon>\n            </ButtonPlus>\n            Create\n          </AuthFormSubmitButton>\n        </ModalForm>\n      </Formik>\n    </Section>\n  );\n};\n\nexport default AddCardModal;\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport sprite from '../../../images/sprite.svg';\nimport { deleteColumn } from 'redux/dashboards/dashboardsOperations';\nimport Card from 'components/Cards/Card';\nimport BasicModal from 'components/Modals/BasicModal/BasicModal';\nimport EditColumnModal from 'components/Modals/ColumnModal/EditColumnModal/EditColumnModal';\nimport {\n  Wrapper,\n  Header,\n  Button,\n  PlusIcon,\n  ButtonPlus,\n  TaskList,\n  IconWrapper,\n  Icon,\n  Content,\n  Title,\n  ContentWrapper,\n} from './ColumnTask.Styled';\nimport AddCardModal from 'components/Modals/CardModal/AddCardModal/AddCardModal';\nimport { useSelector } from 'react-redux';\n\nexport const ColumnTask = ({ item }) => {\n  const dispatch = useDispatch();\n\n  const [openColumnModal, setOpenColumnModal] = useState(false);\n  const [openCardModal, setOpenCardModal] = useState(false);\n\n  const selectedPriority = useSelector(\n    state => state.dashboards.selectedPriority\n  );\n\n  const handleOpenColumnModal = () => setOpenColumnModal(true);\n  const handleCloseColumnModal = () => setOpenColumnModal(false);\n\n  const handleOpenCardModal = () => setOpenCardModal(true);\n  const handleCloseCardModal = () => setOpenCardModal(false);\n\n  const filteredColumn =\n    item.cards && item.cards.filter(item => item.priority === selectedPriority);\n\n  const columnLength = item.cards && item.cards.length;\n  const filteredColumnLength = filteredColumn && filteredColumn.length;\n\n  const condition =\n    selectedPriority === 'show all' ? columnLength : filteredColumnLength;\n\n  return (\n    <Wrapper>\n      <ContentWrapper>\n        <Content>\n          <Header>\n            <Title>{item.title}</Title>\n\n            <IconWrapper>\n              <Icon onClick={handleOpenColumnModal}>\n                <use href={sprite + '#icon-pencil'} />\n              </Icon>\n\n              <Icon onClick={() => dispatch(deleteColumn(item._id))}>\n                <use href={sprite + '#icon-trash'} />\n              </Icon>\n            </IconWrapper>\n          </Header>\n\n          <TaskList length={condition}>\n            {selectedPriority === 'show all'\n              ? item.cards &&\n                item.cards.map(el => (\n                  <Card key={el._id} item={el} columnName={item.title} />\n                ))\n              : filteredColumn &&\n                filteredColumn.map(el => (\n                  <Card key={el._id} item={el} columnName={item.title} />\n                ))}\n          </TaskList>\n        </Content>\n\n        <Button onClick={handleOpenCardModal}>\n          <ButtonPlus>\n            <PlusIcon>\n              <use href={sprite + '#icon-plus'} />\n            </PlusIcon>\n          </ButtonPlus>\n          Add another card\n        </Button>\n      </ContentWrapper>\n      <BasicModal\n        open={openColumnModal}\n        closeModal={handleCloseColumnModal}\n        children={\n          <EditColumnModal\n            title={item.title}\n            columnId={item._id}\n            closeModal={handleCloseColumnModal}\n          />\n        }\n      />\n\n      <BasicModal\n        open={openCardModal}\n        closeModal={handleCloseCardModal}\n        children={\n          <AddCardModal columnId={item._id} closeModal={handleCloseCardModal} />\n        }\n      />\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n\n  overflow-x: scroll;\n  width: 100%;\n  height: 100%;\n  margin-bottom: 8px;\n\n  user-select: none;\n\n  ::-webkit-scrollbar {\n    height: 12px;\n    width: calc(100% - 24px);\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: ${props => props.theme.column.scrollTrack};\n    border: 1px solid ${props => props.theme.column.scrollBorder};\n    border-radius: 12px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background-color: ${props => props.theme.column.scrollThumb};\n  }\n\n  @media screen and (min-width: 768px) {\n    overflow-x: ${props => (props.length < 2 ? 'hidden' : 'scroll')};\n  }\n\n  @media screen and (min-width: 1280px) {\n    overflow-x: ${props => (props.length < 3 ? 'hidden' : 'scroll')};\n  }\n`;\n\nexport const ContentWrapper = styled.div`\n  position: relative;\n  display: flex;\n  gap: 34px;\n`;\n","import React from 'react';\n\nimport {\n  FormWrapper,\n  Section,\n  AuthFormSubmitButton,\n  PlusIcon,\n  TitleInput,\n  SectionTitle,\n  ModalForm,\n  ErrorSection,\n  ButtonPlus,\n} from '../ColumnModal.styled';\nimport sprite from '../../../../images/sprite.svg';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { addColumn } from 'redux/dashboards/dashboardsOperations';\nimport { useSelector } from 'react-redux';\nimport { selectColumns } from 'redux/dashboards/dashboardsSelectors';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\nconst initialValues = {\n  title: '',\n};\n\nconst AddColumnModal = ({ dashboardId, closeModal }) => {\n  const dispatch = useDispatch();\n  const columns = useSelector(selectColumns);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { title } = values;\n\n    const alreadyExists = columns.findIndex(item => {\n      const name = item.title.toLowerCase();\n      const newName = title.toLowerCase();\n      return name === newName;\n    });\n\n    if (alreadyExists >= 0) {\n      return `${columns.name} is already added to contact list`;\n    } else {\n    }\n\n    dispatch(\n      addColumn({\n        dashboardId,\n        title,\n      })\n    );\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <Section>\n      <SectionTitle>Add column</SectionTitle>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <ModalForm>\n          <FormWrapper>\n            <ErrorSection name=\"title\" component=\"div\" />\n            <TitleInput\n              type=\"text \"\n              id=\"text\"\n              name=\"title\"\n              placeholder=\"Title \"\n            />\n          </FormWrapper>\n\n          <AuthFormSubmitButton type=\"submit\">\n            <ButtonPlus>\n              <PlusIcon>\n                <use href={sprite + '#icon-plus'} />\n              </PlusIcon>\n            </ButtonPlus>\n            Add\n          </AuthFormSubmitButton>\n        </ModalForm>\n      </Formik>\n    </Section>\n  );\n};\n\nexport default AddColumnModal;\n","import React, { useState, useRef } from 'react';\nimport AddButton from 'components/Boards/AddButton/AddButton';\nimport { ColumnTask } from 'components/Boards/ColumnTask/ColumnTask';\nimport { ContentWrapper, Wrapper } from './MainDashboard.styled';\nimport BasicModal from 'components/Modals/BasicModal/BasicModal';\nimport AddColumnModal from 'components/Modals/ColumnModal/AddColumnModal';\nimport { useSelector } from 'react-redux';\nimport {\n  selectColumns,\n  selectColumnsLength,\n  selectCurrentDashboard,\n} from 'redux/dashboards/dashboardsSelectors';\n\nconst MainDashboard = () => {\n  const columnLength = useSelector(selectColumnsLength);\n  const currentDashboard = useSelector(selectCurrentDashboard);\n  const columns = useSelector(selectColumns);\n\n  const [open, setOpen] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n\n  const scrollRef = useRef(null);\n  const [startX, setStartX] = useState(0);\n\n  const handleOpen = () => {\n    setOpen(true);\n    setIsDragging(false);\n  };\n\n  const handleCloseModal = () => {\n    setOpen(false);\n    setIsDragging(true);\n  };\n\n  const handleMouseDown = e => {\n    if (e.button === 0) {\n      const target = e.target.tagName.toLowerCase();\n      if (target !== 'input' && target !== 'textarea') {\n        setIsDragging(true);\n        setStartX(e.pageX - scrollRef.current.offsetLeft);\n      }\n    }\n  };\n\n  const handleMouseMove = e => {\n    if (!isDragging || open) return;\n    const x = e.pageX - scrollRef.current.offsetLeft;\n    const walk = (x - startX) * 0.05;\n    scrollRef.current.scrollLeft = scrollRef.current.scrollLeft - walk;\n  };\n\n  const handleMouseUp = e => {\n    if (e.button === 0) {\n      setIsDragging(false);\n    }\n  };\n\n  return (\n    <Wrapper length={columnLength} ref={scrollRef}>\n      <ContentWrapper\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n      >\n        {columns &&\n          columns.map(item => <ColumnTask key={item._id} item={item} />)}\n\n        <AddButton openModal={handleOpen} />\n      </ContentWrapper>\n\n      <BasicModal\n        open={open}\n        closeModal={handleCloseModal}\n        children={\n          <AddColumnModal\n            dashboardId={currentDashboard?._id}\n            closeModal={handleCloseModal}\n          />\n        }\n      />\n    </Wrapper>\n  );\n};\n\nexport default MainDashboard;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Wrapper } from './ScreensPage.styled';\nimport { selectIsMenuOpen } from 'redux/menuMode/menuModeSelectors';\nimport { closeMenuMode } from 'redux/menuMode/menuModeSlice';\n\nimport HeaderDashboard from './HeaderDashboard/HeaderDashboard';\nimport MainDashboard from './MainDashboard/MainDashboard';\n\nconst ScreensPage = () => {\n  const dispatch = useDispatch();\n\n  const menuMode = useSelector(selectIsMenuOpen);\n  const currentBg = useSelector(state => state?.dashboards?.currentBg);\n  const currentName = useSelector(state => state?.dashboards?.currentName);\n\n  const handleScreenClick = () => {\n    if (menuMode) {\n      dispatch(closeMenuMode());\n    }\n  };\n\n  return (\n    <Wrapper onClick={handleScreenClick} bgcUrl={currentBg} isOpen={menuMode}>\n      <HeaderDashboard children={currentName} />\n\n      <MainDashboard />\n    </Wrapper>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","props","bgcUrl","isOpen","Text","_templateObject2","theme","themePopup","textMain","Icon","_templateObject3","icon","Section","SectionTitle","modal","FormWrapper","line","FormTitle","_templateObject4","BgWrapper","_templateObject5","BgItem","_templateObject6","iconDefault","CustomRadioBtn","_templateObject7","url","backgroundSecondary","DefaultRadioBtn","Field","_templateObject8","ShowAllLabel","_templateObject9","textSecondary","RadioBtnWrapper","_templateObject10","Label","_templateObject11","value","LabelItem","_templateObject12","LabelText","_templateObject13","_templateObject14","ModalForm","Form","_templateObject15","options","FiltersModal","dispatch","useDispatch","currentDashboard","useSelector","selectCurrentDashboard","selectedBg","setSelectedBg","useState","selectedLabel","setSelectedLabel","initialValues","bg","label","handleBgSelection","el","_jsxs","children","_jsx","Formik","data","idx","onClick","onMouseDown","updatedData","backgroundURL","editDashboard","dashboardId","_id","changeBgUrl","className","type","name","selectPriority","map","handleLabelSelection","concat","toUpperCase","slice","Filter","open","setOpen","handleClose","_Fragment","handleOpen","href","sprite","BasicModal","closeModal","Header","Title","header","userName","_ref","Button","length","addColumnButton","background","IconWrapper","plusBackground","plusColor","color","openModal","columnsLength","selectColumnsLength","CardWrapper","column","backgroundMain","expired","priority","TopWrapper","borderColor","BottomWrapper","Stats","Priority","Deadline","DelayIcon","AiOutlineClockCircle","IconsGroup","ActiveIcon","IconBellWrapper","backgroundBell","filterBell","IconBell","strokeBell","MoverWrapper","PopupWrapper","border","boxShadow","PopupItem","_templateObject16","textAccent","PopupText","_templateObject17","PopupIcon","_templateObject18","card","columnName","filteredColumnNames","selectColumns","filter","item","title","checkTextLength","text","str","split","join","splice","handleChangeColumn","cardId","columnId","currentOwner","owner","changeColumn","TitleInput","buttonBackground","Textarea","AuthFormSubmitButton","buttonText","ButtonPlus","PlusIcon","ErrorSection","ErrorMessage","unActiveDay","today","DateTitle","validationSchema","Yup","shape","required","description","max","dateOptions","year","month","day","deadline","startDate","setStartDate","customDate","toLocaleString","dateLabel","Date","editedDeadline","onSubmit","handleSubmit","values","_ref2","resetForm","editCard","component","id","placeholder","document","querySelector","click","DatePicker","minDate","timeFormat","selected","onChange","date","isPopupOpen","setIsPopupOpen","delayPopup","setDelayPopup","moveIconRef","useRef","openCardModal","setOpenCardModal","handleCloseCardModal","parsedDate","formatedDeadline","handleOutsideClick","event","composedPath","includes","current","useEffect","body","addEventListener","removeEventListener","expiredCard","handleDelayPopup","prev","ref","handleIconMoveClick","handleDeadline","delay","setDate","getDate","CardMovePopup","handleOpenCardModal","deleteCard","EditCardModal","editColumn","Content","ContentWrapper","TaskList","scrollTrack","scrollBorder","scrollThumb","buttonColor","getMonth","formattedDate","toISOString","addCard","ColumnTask","openColumnModal","setOpenColumnModal","selectedPriority","state","dashboards","handleCloseColumnModal","filteredColumn","cards","columnLength","filteredColumnLength","condition","handleOpenColumnModal","deleteColumn","Card","EditColumnModal","AddCardModal","columns","findIndex","toLowerCase","addColumn","MainDashboard","isDragging","setIsDragging","scrollRef","startX","setStartX","handleCloseModal","e","button","target","tagName","pageX","offsetLeft","onMouseMove","walk","scrollLeft","onMouseUp","AddButton","AddColumnModal","ScreensPage","menuMode","selectIsMenuOpen","currentBg","_state$dashboards","currentName","_state$dashboards2","handleScreenClick","closeMenuMode","HeaderDashboard"],"sourceRoot":""}